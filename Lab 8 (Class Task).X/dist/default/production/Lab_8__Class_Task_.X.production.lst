

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 25 10:49:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.32
    21                           ; Generated 02/02/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F452 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  0001A0                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _keypad
    61  0001A0  37                 	db	55
    62  0001A1  38                 	db	56
    63  0001A2  39                 	db	57
    64  0001A3  2F                 	db	47
    65  0001A4  34                 	db	52
    66  0001A5  35                 	db	53
    67  0001A6  36                 	db	54
    68  0001A7  2A                 	db	42
    69  0001A8  31                 	db	49
    70  0001A9  32                 	db	50
    71  0001AA  33                 	db	51
    72  0001AB  2D                 	db	45
    73  0001AC  43                 	db	67
    74  0001AD  30                 	db	48
    75  0001AE  3D                 	db	61
    76  0001AF  2B                 	db	43
    77  0000                     _PORTD	set	3971
    78  0000                     _TXREG	set	4013
    79  0000                     _PIR1bits	set	3998
    80  0000                     _RCSTAbits	set	4011
    81  0000                     _TXSTAbits	set	4012
    82  0000                     _SPBRG	set	4015
    83  0000                     _TXSTA	set	4012
    84  0000                     _PORTB	set	3969
    85  0000                     _TRISB	set	3987
    86  0000                     _INTCON2bits	set	4081
    87  0000                     _TRISD	set	3989
    88  0000                     _INTCONbits	set	4082
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93  000160                     __pcinit:
    94                           	callstack 0
    95  000160                     start_initialization:
    96                           	callstack 0
    97  000160                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (16 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102  000160  0EA0               	movlw	low __pidataCOMRAM
   103  000162  6EF6               	movwf	tblptrl,c
   104  000164  0E01               	movlw	high __pidataCOMRAM
   105  000166  6EF7               	movwf	tblptrh,c
   106  000168  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107  00016A  6EF8               	movwf	tblptru,c
   108  00016C  EE00  F001         	lfsr	0,__pdataCOMRAM
   109  000170  EE10 F010          	lfsr	1,16
   110  000174                     copy_data0:
   111  000174  0009               	tblrd		*+
   112  000176  CFF5 FFEE          	movff	tablat,postinc0
   113  00017A  50E5               	movf	postdec1,w,c
   114  00017C  50E1               	movf	fsr1l,w,c
   115  00017E  E1FA               	bnz	copy_data0
   116  000180                     end_of_initialization:
   117                           	callstack 0
   118  000180                     __end_of__initialization:
   119                           	callstack 0
   120  000180  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121  000182  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122  000184  0100               	movlb	0
   123  000186  EF99  F000         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	dataCOMRAM
   126  000001                     __pdataCOMRAM:
   127                           	callstack 0
   128  000001                     _keypad:
   129                           	callstack 0
   130  000001                     	ds	16
   131                           
   132                           	psect	cstackCOMRAM
   133  000011                     __pcstackCOMRAM:
   134                           	callstack 0
   135  000011                     SerTX@x:
   136                           	callstack 0
   137  000011                     MSDelay@millisecs:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x0
   141  000011                     	ds	2
   142  000013                     MSDelay@i:
   143                           	callstack 0
   144                           
   145                           ; 2 bytes @ 0x2
   146  000013                     	ds	2
   147  000015                     MSDelay@j:
   148                           	callstack 0
   149                           
   150                           ; 2 bytes @ 0x4
   151  000015                     	ds	2
   152  000017                     RBIF_ISR@COL:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x6
   156  000017                     	ds	1
   157  000018                     RBIF_ISR@temp:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x7
   161  000018                     	ds	1
   162  000019                     RBIF_ISR@ROW:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x8
   166  000019                     	ds	1
   167  00001A                     ??_chk_int:
   168                           
   169                           ; 1 bytes @ 0x9
   170  00001A                     	ds	4
   171  00001E                     
   172                           ; 1 bytes @ 0xD
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   175 ;;
   176 ;; *************** function _main *****************
   177 ;; Defined at:
   178 ;;		line 88 in file "main.c"
   179 ;; Parameters:    Size  Location     Type
   180 ;;		None
   181 ;; Auto vars:     Size  Location     Type
   182 ;;		None
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      void 
   185 ;; Registers used:
   186 ;;		wreg, status,2, status,0
   187 ;; Tracked objects:
   188 ;;		On entry : 0/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   192 ;;      Params:         0       0       0       0       0       0       0
   193 ;;      Locals:         0       0       0       0       0       0       0
   194 ;;      Temps:          0       0       0       0       0       0       0
   195 ;;      Totals:         0       0       0       0       0       0       0
   196 ;;Total ram usage:        0 bytes
   197 ;; Hardware stack levels required when called: 3
   198 ;; This function calls:
   199 ;;		Nothing
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206  000132                     __ptext0:
   207                           	callstack 0
   208  000132                     _main:
   209                           	callstack 0
   210  000132  FFFF               	dw	65535	; assembler added errata NOP
   211                           
   212                           ;main.c: 89: TRISD = 0;
   213                           
   214                           ;incstack = 0
   215  000134  0E00               	movlw	0
   216  000136  6E95               	movwf	149,c	;volatile
   217                           
   218                           ;main.c: 90: INTCON2bits.RBPU = 0;
   219  000138  9EF1               	bcf	241,7,c	;volatile
   220                           
   221                           ;main.c: 91: TRISB = 0xF0;
   222  00013A  0EF0               	movlw	240
   223  00013C  6E93               	movwf	147,c	;volatile
   224                           
   225                           ;main.c: 92: PORTB = 0xF0;
   226  00013E  0EF0               	movlw	240
   227  000140  6E81               	movwf	129,c	;volatile
   228  000142                     l905:
   229  000142  FFFF               	dw	65535	; assembler added errata NOP
   230  000144  0EF0               	movlw	240
   231  000146  1881               	xorwf	129,w,c	;volatile
   232  000148  A4D8               	btfss	status,2,c
   233  00014A  D7FB               	goto	l905
   234                           
   235                           ;main.c: 94: TXSTA = 0x20;
   236  00014C  0E20               	movlw	32
   237  00014E  6EAC               	movwf	172,c	;volatile
   238                           
   239                           ;main.c: 95: SPBRG = 15;
   240  000150  0E0F               	movlw	15
   241  000152  6EAF               	movwf	175,c	;volatile
   242                           
   243                           ;main.c: 96: TXSTAbits.TXEN = 1;
   244  000154  8AAC               	bsf	172,5,c	;volatile
   245                           
   246                           ;main.c: 97: RCSTAbits.SPEN = 1;
   247  000156  8EAB               	bsf	171,7,c	;volatile
   248                           
   249                           ;main.c: 98: INTCONbits.RBIE = 1;
   250  000158  86F2               	bsf	242,3,c	;volatile
   251                           
   252                           ;main.c: 99: INTCONbits.GIE = 1;
   253  00015A  8EF2               	bsf	242,7,c	;volatile
   254  00015C                     l46:
   255  00015C  FFFF               	dw	65535	; assembler added errata NOP
   256  00015E  D7FE               	goto	l46
   257  000160                     __end_of_main:
   258                           	callstack 0
   259                           
   260 ;; *************** function _chk_int *****************
   261 ;; Defined at:
   262 ;;		line 82 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   276 ;;      Params:         0       0       0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0       0       0
   278 ;;      Temps:          4       0       0       0       0       0       0
   279 ;;      Totals:         4       0       0       0       0       0       0
   280 ;;Total ram usage:        4 bytes
   281 ;; Hardware stack levels used: 1
   282 ;; Hardware stack levels required when called: 2
   283 ;; This function calls:
   284 ;;		_RBIF_ISR
   285 ;; This function is called by:
   286 ;;		Interrupt level 2
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290                           	psect	intcode
   291  000008                     __pintcode:
   292                           	callstack 0
   293  000008                     _chk_int:
   294                           	callstack 0
   295  000008  FFFF               	dw	65535	; assembler added errata NOP
   296                           
   297                           ;incstack = 0
   298  00000A  821E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   299  00000C  CFD9 F01A          	movff	fsr2l,??_chk_int
   300  000010  CFDA F01B          	movff	fsr2h,??_chk_int+1
   301  000014  CFF3 F01C          	movff	prodl,??_chk_int+2
   302  000018  CFF4 F01D          	movff	prodh,??_chk_int+3
   303                           
   304                           ;main.c: 83: if (INTCONbits.RBIF == 1)
   305  00001C  B0F2               	btfsc	242,0,c	;volatile
   306                           
   307                           ;main.c: 84: RBIF_ISR();
   308  00001E  EC1E  F000         	call	_RBIF_ISR	;wreg free
   309  000022  C01D  FFF4         	movff	??_chk_int+3,prodh
   310  000026  C01C  FFF3         	movff	??_chk_int+2,prodl
   311  00002A  C01B  FFDA         	movff	??_chk_int+1,fsr2h
   312  00002E  C01A  FFD9         	movff	??_chk_int,fsr2l
   313  000032  921E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   314  000034  0011               	retfie		f
   315  000036  FFFF               	dw	65535	; errata NOP
   316  000038                     __end_of_chk_int:
   317                           	callstack 0
   318                           
   319 ;; *************** function _RBIF_ISR *****************
   320 ;; Defined at:
   321 ;;		line 103 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  ROW             1    8[COMRAM] unsigned char 
   326 ;;  temp            1    7[COMRAM] unsigned char 
   327 ;;  COL             1    6[COMRAM] unsigned char 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   337 ;;      Params:         0       0       0       0       0       0       0
   338 ;;      Locals:         3       0       0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0
   340 ;;      Totals:         3       0       0       0       0       0       0
   341 ;;Total ram usage:        3 bytes
   342 ;; Hardware stack levels used: 1
   343 ;; Hardware stack levels required when called: 1
   344 ;; This function calls:
   345 ;;		_MSDelay
   346 ;;		_SerTX
   347 ;; This function is called by:
   348 ;;		_chk_int
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text2
   353  00003C                     __ptext2:
   354                           	callstack 0
   355  00003C                     _RBIF_ISR:
   356                           	callstack 0
   357  00003C  FFFF               	dw	65535	; assembler added errata NOP
   358                           
   359                           ;main.c: 104: unsigned char temp, COL = 0, ROW = 4;
   360                           
   361                           ;incstack = 0
   362  00003E  0E00               	movlw	0
   363  000040  6E17               	movwf	RBIF_ISR@COL^0,c
   364  000042  0E04               	movlw	4
   365  000044  6E19               	movwf	RBIF_ISR@ROW^0,c
   366                           
   367                           ;main.c: 105: MSDelay(15);
   368  000046  0E00               	movlw	0
   369  000048  6E12               	movwf	(MSDelay@millisecs+1)^0,c
   370  00004A  0E0F               	movlw	15
   371  00004C  6E11               	movwf	MSDelay@millisecs^0,c
   372  00004E  EC78  F000         	call	_MSDelay	;wreg free
   373                           
   374                           ;main.c: 106: temp = PORTB;
   375  000052  CF81 F018          	movff	3969,RBIF_ISR@temp	;volatile
   376                           
   377                           ;main.c: 107: temp ^= 0xF0;
   378  000056  0EF0               	movlw	240
   379  000058  1A18               	xorwf	RBIF_ISR@temp^0,f,c
   380                           
   381                           ;main.c: 108: if (!temp) return;
   382  00005A  5018               	movf	RBIF_ISR@temp^0,w,c
   383  00005C  B4D8               	btfsc	status,2,c
   384  00005E  D045               	goto	i2l53
   385  000060  D002               	goto	i2l947
   386  000062                     i2l945:
   387  000062  FFFF               	dw	65535	; assembler added errata NOP
   388  000064  2A17               	incf	RBIF_ISR@COL^0,f,c
   389  000066                     i2l947:
   390  000066  FFFF               	dw	65535	; assembler added errata NOP
   391  000068  90D8               	bcf	status,0,c
   392  00006A  3618               	rlcf	RBIF_ISR@temp^0,f,c
   393  00006C  5018               	movf	RBIF_ISR@temp^0,w,c
   394  00006E  A4D8               	btfss	status,2,c
   395  000070  D7F8               	goto	i2l945
   396                           
   397                           ;main.c: 110: PORTB = 0xFE;
   398  000072  0EFE               	movlw	254
   399  000074  6E81               	movwf	129,c	;volatile
   400                           
   401                           ;main.c: 111: if (PORTB != 0xFE)
   402  000076  0EFE               	movlw	254
   403  000078  1881               	xorwf	129,w,c	;volatile
   404  00007A  B4D8               	btfsc	status,2,c
   405  00007C  D002               	goto	i2l955
   406                           
   407                           ;main.c: 112: ROW = 0;
   408  00007E  0E00               	movlw	0
   409  000080  D01A               	goto	L3
   410  000082                     i2l955:
   411  000082  FFFF               	dw	65535	; assembler added errata NOP
   412                           
   413                           ;main.c: 113: else {;main.c: 114: PORTB = 0xFD;
   414  000084  0EFD               	movlw	253
   415  000086  6E81               	movwf	129,c	;volatile
   416                           
   417                           ;main.c: 115: if (PORTB != 0xFD)
   418  000088  0EFD               	movlw	253
   419  00008A  1881               	xorwf	129,w,c	;volatile
   420  00008C  B4D8               	btfsc	status,2,c
   421  00008E  D002               	goto	i2l961
   422                           
   423                           ;main.c: 116: ROW = 1;
   424  000090  0E01               	movlw	1
   425  000092  D011               	goto	L3
   426  000094                     i2l961:
   427  000094  FFFF               	dw	65535	; assembler added errata NOP
   428                           
   429                           ;main.c: 117: else {;main.c: 118: PORTB = 0xFB;
   430  000096  0EFB               	movlw	251
   431  000098  6E81               	movwf	129,c	;volatile
   432                           
   433                           ;main.c: 119: if (PORTB != 0xFB)
   434  00009A  0EFB               	movlw	251
   435  00009C  1881               	xorwf	129,w,c	;volatile
   436  00009E  B4D8               	btfsc	status,2,c
   437  0000A0  D002               	goto	i2l967
   438                           
   439                           ;main.c: 120: ROW = 2;
   440  0000A2  0E02               	movlw	2
   441  0000A4  D008               	goto	L3
   442  0000A6                     i2l967:
   443  0000A6  FFFF               	dw	65535	; assembler added errata NOP
   444                           
   445                           ;main.c: 121: else {;main.c: 122: PORTB = 0xF7;
   446  0000A8  0EF7               	movlw	247
   447  0000AA  6E81               	movwf	129,c	;volatile
   448                           
   449                           ;main.c: 123: if (PORTB != 0xF7)
   450  0000AC  0EF7               	movlw	247
   451  0000AE  1881               	xorwf	129,w,c	;volatile
   452  0000B0  B4D8               	btfsc	status,2,c
   453  0000B2  D003               	goto	i2l60
   454                           
   455                           ;main.c: 124: ROW = 3;
   456  0000B4  0E03               	movlw	3
   457  0000B6                     L3:
   458  0000B6  FFFF               	dw	65535	; assembler added errata NOP
   459  0000B8  6E19               	movwf	RBIF_ISR@ROW^0,c
   460  0000BA                     i2l60:
   461  0000BA  FFFF               	dw	65535	; assembler added errata NOP
   462                           
   463                           ;main.c: 125: };main.c: 126: };main.c: 127: };main.c: 128: if (ROW < 4)
   464  0000BC  0E04               	movlw	4
   465  0000BE  6019               	cpfslt	RBIF_ISR@ROW^0,c
   466  0000C0  D00E               	goto	i2l979
   467                           
   468                           ;main.c: 129: SerTX(keypad[ROW][COL]);
   469  0000C2  5019               	movf	RBIF_ISR@ROW^0,w,c
   470  0000C4  0D04               	mullw	4
   471  0000C6  50F3               	movf	243,w,c
   472  0000C8  0F01               	addlw	low _keypad
   473  0000CA  2417               	addwf	RBIF_ISR@COL^0,w,c
   474  0000CC  6ED9               	movwf	fsr2l,c
   475  0000CE  6ADA               	clrf	fsr2h,c
   476  0000D0  50DF               	movf	indf2,w,c
   477  0000D2  ECC5  F000         	call	_SerTX
   478  0000D6  D003               	goto	i2l979
   479  0000D8                     i2l977:
   480  0000D8  FFFF               	dw	65535	; assembler added errata NOP
   481  0000DA  0EF0               	movlw	240
   482  0000DC  6E81               	movwf	129,c	;volatile
   483  0000DE                     i2l979:
   484  0000DE  FFFF               	dw	65535	; assembler added errata NOP
   485  0000E0  0EF0               	movlw	240
   486  0000E2  1881               	xorwf	129,w,c	;volatile
   487  0000E4  A4D8               	btfss	status,2,c
   488  0000E6  D7F8               	goto	i2l977
   489                           
   490                           ;main.c: 131: INTCONbits.RBIF = 0;
   491  0000E8  90F2               	bcf	242,0,c	;volatile
   492  0000EA                     i2l53:
   493  0000EA  FFFF               	dw	65535	; assembler added errata NOP
   494  0000EC  0012               	return		;funcret
   495  0000EE  FFFF               	dw	65535	; errata NOP
   496  0000F0                     __end_of_RBIF_ISR:
   497                           	callstack 0
   498                           
   499 ;; *************** function _SerTX *****************
   500 ;; Defined at:
   501 ;;		line 134 in file "main.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;  x               1    wreg     unsigned char 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  x               1    0[COMRAM] unsigned char 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   515 ;;      Params:         0       0       0       0       0       0       0
   516 ;;      Locals:         1       0       0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0       0       0
   518 ;;      Totals:         1       0       0       0       0       0       0
   519 ;;Total ram usage:        1 bytes
   520 ;; Hardware stack levels used: 1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_RBIF_ISR
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text3
   529  00018A                     __ptext3:
   530                           	callstack 0
   531  00018A                     _SerTX:
   532                           	callstack 0
   533  00018A  FFFF               	dw	65535	; assembler added errata NOP
   534                           
   535                           ;incstack = 0
   536                           ;SerTX@x stored from wreg
   537  00018C  6E11               	movwf	SerTX@x^0,c
   538  00018E  FFFF               	dw	65535	; assembler added errata NOP
   539                           
   540                           ;main.c: 135: while (PIR1bits.TXIF != 1);
   541  000190  A89E               	btfss	158,4,c	;volatile
   542  000192  D7FD               	goto	i2l845
   543                           
   544                           ;main.c: 136: TXREG = x;
   545  000194  C011  FFAD         	movff	SerTX@x,4013	;volatile
   546                           
   547                           ;main.c: 137: PORTD=x;
   548  000198  C011  FF83         	movff	SerTX@x,3971	;volatile
   549  00019C  0012               	return		;funcret
   550  00019E  FFFF               	dw	65535	; errata NOP
   551  0001A0                     __end_of_SerTX:
   552                           	callstack 0
   553                           
   554 ;; *************** function _MSDelay *****************
   555 ;; Defined at:
   556 ;;		line 141 in file "main.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  millisecs       2    0[COMRAM] unsigned int 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  j               2    4[COMRAM] unsigned int 
   561 ;;  i               2    2[COMRAM] unsigned int 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   571 ;;      Params:         2       0       0       0       0       0       0
   572 ;;      Locals:         4       0       0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0
   574 ;;      Totals:         6       0       0       0       0       0       0
   575 ;;Total ram usage:        6 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_RBIF_ISR
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text4
   585  0000F0                     __ptext4:
   586                           	callstack 0
   587  0000F0                     _MSDelay:
   588                           	callstack 0
   589  0000F0  FFFF               	dw	65535	; assembler added errata NOP
   590                           
   591                           ;main.c: 142: unsigned int i, j;;main.c: 143: for (i = 0; i < millisecs; i++)
   592                           
   593                           ;incstack = 0
   594  0000F2  0E00               	movlw	0
   595  0000F4  6E14               	movwf	(MSDelay@i+1)^0,c
   596  0000F6  0E00               	movlw	0
   597  0000F8  6E13               	movwf	MSDelay@i^0,c
   598  0000FA  D010               	goto	i2l931
   599  0000FC                     i2l919:
   600  0000FC  FFFF               	dw	65535	; assembler added errata NOP
   601                           
   602                           ;main.c: 144: for (j = 0; j < 135; j++) {
   603  0000FE  0E00               	movlw	0
   604  000100  6E16               	movwf	(MSDelay@j+1)^0,c
   605  000102  0E00               	movlw	0
   606  000104  6E15               	movwf	MSDelay@j^0,c
   607  000106                     i2l925:
   608  000106  FFFF               	dw	65535	; assembler added errata NOP
   609  000108  4A15               	infsnz	MSDelay@j^0,f,c
   610  00010A  2A16               	incf	(MSDelay@j+1)^0,f,c
   611  00010C  5016               	movf	(MSDelay@j+1)^0,w,c
   612  00010E  E104               	bnz	i2u14_40
   613  000110  0E87               	movlw	135
   614  000112  5C15               	subwf	MSDelay@j^0,w,c
   615  000114  A0D8               	btfss	status,0,c
   616  000116  D7F7               	goto	i2l925
   617  000118                     i2u14_40:
   618  000118  4A13               	infsnz	MSDelay@i^0,f,c
   619  00011A  2A14               	incf	(MSDelay@i+1)^0,f,c
   620  00011C                     i2l931:
   621  00011C  FFFF               	dw	65535	; assembler added errata NOP
   622  00011E  5011               	movf	MSDelay@millisecs^0,w,c
   623  000120  5C13               	subwf	MSDelay@i^0,w,c
   624  000122  5012               	movf	(MSDelay@millisecs+1)^0,w,c
   625  000124  5814               	subwfb	(MSDelay@i+1)^0,w,c
   626  000126  B0D8               	btfsc	status,0,c
   627  000128  0012               	return		;funcret
   628  00012A  FFFF               	dw	65535	; assembler added errata NOP
   629  00012C  D7E7               	goto	i2l919
   630  00012E  FFFF               	dw	65535	; errata NOP
   631  000130                     __end_of_MSDelay:
   632                           	callstack 0
   633  000130  FFFF               	dw	65535	; assembler added errata NOP
   634                           
   635                           	psect	rparam
   636  0000                     
   637                           	psect	temp
   638  00001E                     btemp:
   639                           	callstack 0
   640  00001E                     	ds	1
   641  0000                     int$flags	set	btemp
   642  0000                     wtemp8	set	btemp+1
   643  0000                     ttemp5	set	btemp+1
   644  0000                     ttemp6	set	btemp+4
   645  0000                     ttemp7	set	btemp+8
   646                           
   647                           	psect	idloc
   648                           
   649                           ;Config register IDLOC0 @ 0x200000
   650                           ;	unspecified, using default values
   651  200000                     	org	2097152
   652  200000  FF                 	db	255
   653                           
   654                           ;Config register IDLOC1 @ 0x200001
   655                           ;	unspecified, using default values
   656  200001                     	org	2097153
   657  200001  FF                 	db	255
   658                           
   659                           ;Config register IDLOC2 @ 0x200002
   660                           ;	unspecified, using default values
   661  200002                     	org	2097154
   662  200002  FF                 	db	255
   663                           
   664                           ;Config register IDLOC3 @ 0x200003
   665                           ;	unspecified, using default values
   666  200003                     	org	2097155
   667  200003  FF                 	db	255
   668                           
   669                           ;Config register IDLOC4 @ 0x200004
   670                           ;	unspecified, using default values
   671  200004                     	org	2097156
   672  200004  FF                 	db	255
   673                           
   674                           ;Config register IDLOC5 @ 0x200005
   675                           ;	unspecified, using default values
   676  200005                     	org	2097157
   677  200005  FF                 	db	255
   678                           
   679                           ;Config register IDLOC6 @ 0x200006
   680                           ;	unspecified, using default values
   681  200006                     	org	2097158
   682  200006  FF                 	db	255
   683                           
   684                           ;Config register IDLOC7 @ 0x200007
   685                           ;	unspecified, using default values
   686  200007                     	org	2097159
   687  200007  FF                 	db	255
   688                           
   689                           	psect	config
   690                           
   691                           ; Padding undefined space
   692  300000                     	org	3145728
   693  300000  FF                 	db	255
   694                           
   695                           ;Config register CONFIG1H @ 0x300001
   696                           ;	Oscillator Selection bits
   697                           ;	OSC = XT, XT oscillator
   698                           ;	Oscillator System Clock Switch Enable bit
   699                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
   700  300001                     	org	3145729
   701  300001  21                 	db	33
   702                           
   703                           ;Config register CONFIG2L @ 0x300002
   704                           ;	Power-up Timer Enable bit
   705                           ;	PWRT = OFF, PWRT disabled
   706                           ;	Brown-out Reset Enable bit
   707                           ;	BOR = ON, Brown-out Reset enabled
   708                           ;	Brown-out Reset Voltage bits
   709                           ;	BORV = 20, VBOR set to 2.0V
   710  300002                     	org	3145730
   711  300002  0F                 	db	15
   712                           
   713                           ;Config register CONFIG2H @ 0x300003
   714                           ;	Watchdog Timer Enable bit
   715                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   716                           ;	Watchdog Timer Postscale Select bits
   717                           ;	WDTPS = 128, 1:128
   718  300003                     	org	3145731
   719  300003  0E                 	db	14
   720                           
   721                           ; Padding undefined space
   722  300004                     	org	3145732
   723  300004  FF                 	db	255
   724                           
   725                           ;Config register CONFIG3H @ 0x300005
   726                           ;	CCP2 Mux bit
   727                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
   728  300005                     	org	3145733
   729  300005  01                 	db	1
   730                           
   731                           ;Config register CONFIG4L @ 0x300006
   732                           ;	Stack Full/Underflow Reset Enable bit
   733                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
   734                           ;	Low Voltage ICSP Enable bit
   735                           ;	LVP = OFF, Low Voltage ICSP disabled
   736                           ;	Background Debugger Enable bit
   737                           ;	DEBUG = 0x1, unprogrammed default
   738  300006                     	org	3145734
   739  300006  80                 	db	128
   740                           
   741                           ; Padding undefined space
   742  300007                     	org	3145735
   743  300007  FF                 	db	255
   744                           
   745                           ;Config register CONFIG5L @ 0x300008
   746                           ;	Code Protection bit
   747                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
   748                           ;	Code Protection bit
   749                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
   750                           ;	Code Protection bit
   751                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
   752                           ;	Code Protection bit
   753                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
   754  300008                     	org	3145736
   755  300008  0F                 	db	15
   756                           
   757                           ;Config register CONFIG5H @ 0x300009
   758                           ;	Boot Block Code Protection bit
   759                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
   760                           ;	Data EEPROM Code Protection bit
   761                           ;	CPD = OFF, Data EEPROM not code protected
   762  300009                     	org	3145737
   763  300009  C0                 	db	192
   764                           
   765                           ;Config register CONFIG6L @ 0x30000A
   766                           ;	Write Protection bit
   767                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
   768                           ;	Write Protection bit
   769                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
   770                           ;	Write Protection bit
   771                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
   772                           ;	Write Protection bit
   773                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
   774  30000A                     	org	3145738
   775  30000A  0F                 	db	15
   776                           
   777                           ;Config register CONFIG6H @ 0x30000B
   778                           ;	Configuration Register Write Protection bit
   779                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
   780                           ;	Boot Block Write Protection bit
   781                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
   782                           ;	Data EEPROM Write Protection bit
   783                           ;	WRTD = OFF, Data EEPROM not write protected
   784  30000B                     	org	3145739
   785  30000B  E0                 	db	224
   786                           
   787                           ;Config register CONFIG7L @ 0x30000C
   788                           ;	Table Read Protection bit
   789                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
   790                           ;	Table Read Protection bit
   791                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
   792                           ;	Table Read Protection bit
   793                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
   794                           ;	Table Read Protection bit
   795                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
   796  30000C                     	org	3145740
   797  30000C  0F                 	db	15
   798                           
   799                           ;Config register CONFIG7H @ 0x30000D
   800                           ;	Boot Block Table Read Protection bit
   801                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
   802  30000D                     	org	3145741
   803  30000D  40                 	db	64
   804                           tosu	equ	0xFFF
   805                           tosh	equ	0xFFE
   806                           tosl	equ	0xFFD
   807                           stkptr	equ	0xFFC
   808                           pclatu	equ	0xFFB
   809                           pclath	equ	0xFFA
   810                           pcl	equ	0xFF9
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           prodh	equ	0xFF4
   816                           prodl	equ	0xFF3
   817                           indf0	equ	0xFEF
   818                           postinc0	equ	0xFEE
   819                           postdec0	equ	0xFED
   820                           preinc0	equ	0xFEC
   821                           plusw0	equ	0xFEB
   822                           fsr0h	equ	0xFEA
   823                           fsr0l	equ	0xFE9
   824                           wreg	equ	0xFE8
   825                           indf1	equ	0xFE7
   826                           postinc1	equ	0xFE6
   827                           postdec1	equ	0xFE5
   828                           preinc1	equ	0xFE4
   829                           plusw1	equ	0xFE3
   830                           fsr1h	equ	0xFE2
   831                           fsr1l	equ	0xFE1
   832                           bsr	equ	0xFE0
   833                           indf2	equ	0xFDF
   834                           postinc2	equ	0xFDE
   835                           postdec2	equ	0xFDD
   836                           preinc2	equ	0xFDC
   837                           plusw2	equ	0xFDB
   838                           fsr2h	equ	0xFDA
   839                           fsr2l	equ	0xFD9
   840                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     13      29
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _chk_int in COMRAM

    _chk_int->_RBIF_ISR
    _RBIF_ISR->_MSDelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _chk_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chk_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chk_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chk_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chk_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chk_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _chk_int                                              4     4      0     317
                                              9 COMRAM     4     4      0
                           _RBIF_ISR
 ---------------------------------------------------------------------------------
 (2) _RBIF_ISR                                             3     3      0     317
                                              6 COMRAM     3     3      0
                            _MSDelay
                              _SerTX
 ---------------------------------------------------------------------------------
 (3) _SerTX                                                1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MSDelay                                              6     4      2     168
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _chk_int (ROOT)
   _RBIF_ISR
     _MSDelay
     _SerTX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      D      1D       1       23.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1D      15        0.0%
DATA                 0      0      1D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 25 10:49:20 2021

                                                                       l46 015C  
                                                                      l905 0142  
                                                                     i2l60 00BA  
                                                                     i2l53 00EA  
                                                          __end_of_MSDelay 0130  
                                                                     _main 0132  
                                                                     fsr2h 000FDA  
                                                                     indf2 000FDF  
                                                                     fsr1l 000FE1  
                                                                     fsr2l 000FD9  
                                                                     btemp 001E  
                                                                     prodh 000FF4  
                                                                     prodl 000FF3  
                                                                     start 0038  
                                                             ___param_bank 000000  
                                                         __end_of_RBIF_ISR 00F0  
                                                                    ?_main 0011  
                                                                    i2l931 011C  
                                                                    i2l925 0106  
                                                                    i2l845 018E  
                                                                    i2l919 00FC  
                                                                    i2l961 0094  
                                                                    i2l945 0062  
                                                                    i2l955 0082  
                                                                    i2l947 0066  
                                                                    i2l967 00A6  
                                                                    i2l977 00D8  
                                                                    i2l979 00DE  
                                                                    _SPBRG 000FAF  
                                                                    _PORTB 000F81  
                                                                    _PORTD 000F83  
                                                                    _TRISB 000F93  
                                                                    _TRISD 000F95  
                                                                    _TXREG 000FAD  
                                                                    _TXSTA 000FAC  
                                                          __end_of_chk_int 0038  
                                                                    _SerTX 018A  
                                                                    tablat 000FF5  
                                                                    ttemp5 001F  
                                                                    ttemp6 0022  
                                                                    ttemp7 0026  
                                                                    status 000FD8  
                                                                    wtemp8 001F  
                                                          __initialization 0160  
                                                             __end_of_main 0160  
                                                                   ??_main 001E  
                                                            __activetblptr 000000  
                                                                   ?_SerTX 0011  
                                                              RBIF_ISR@COL 0017  
                                                              RBIF_ISR@ROW 0019  
                                                                ??_MSDelay 0013  
                                                                   SerTX@x 0011  
                                                                   _keypad 0001  
                                                                ??_chk_int 001A  
                                                                   isa$std 000001  
                                                             __pdataCOMRAM 0001  
                                                                   tblptrh 000FF7  
                                                                   tblptrl 000FF6  
                                                                   tblptru 000FF8  
                                                               __accesstop 0080  
                                                  __end_of__initialization 0180  
                                                            ___rparam_used 000001  
                                                                ?_RBIF_ISR 0011  
                                                           __pcstackCOMRAM 0011  
                                                            __end_of_SerTX 01A0  
                                                                  ??_SerTX 0011  
                                                               ??_RBIF_ISR 0017  
                                                             RBIF_ISR@temp 0018  
                                                                  i2u14_40 0118  
                                                                  _MSDelay 00F0  
                                                                  __Hparam 0000  
                                                                  __Lparam 0000  
                                                                  __pcinit 0160  
                                                                  _chk_int 0008  
                                                                  __ramtop 0600  
                                                                  __ptext0 0132  
                                                                  __ptext2 003C  
                                                                  __ptext3 018A  
                                                                  __ptext4 00F0  
                                                     end_of_initialization 0180  
                                                                _RCSTAbits 000FAB  
                                                                  postdec1 000FE5  
                                                                  postinc0 000FEE  
                                                                _TXSTAbits 000FAC  
                                                        __size_of_RBIF_ISR 00B4  
                                                            __pidataCOMRAM 01A0  
                                                      start_initialization 0160  
                                                         MSDelay@millisecs 0011  
                                                                 ?_MSDelay 0011  
                                                                __pintcode 0008  
                                                                 MSDelay@i 0013  
                                                                 MSDelay@j 0015  
                                                                 ?_chk_int 0011  
                                                           __size_of_SerTX 0016  
                                                                 _RBIF_ISR 003C  
                                                                 _PIR1bits 000F9E  
                                                              _INTCON2bits 000FF1  
                                                                copy_data0 0174  
                                                         __size_of_MSDelay 0040  
                                                                 __Hrparam 0000  
                                                                 __Lrparam 0000  
                                                         __size_of_chk_int 0030  
                                                            __size_of_main 002E  
                                                                 isa$xinst 000000  
                                                                 int$flags 001E  
                                                               _INTCONbits 000FF2  
                                                                 intlevel2 01B0  
